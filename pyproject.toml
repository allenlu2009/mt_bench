[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "claude-mt-bench"
version = "0.1.0"
description = "MT-bench Evaluation System for Large Language Models"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Allen Lu", email = "allenlu2009@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    # Core ML libraries (based on working mamba2 environment)
    "torch>=2.5.0",
    "transformers>=4.56.0", 
    "tokenizers>=0.22.0",
    "accelerate>=1.9.0",
    
    # OpenAI for judge
    "openai>=1.97.0",
    
    # HTTP and async
    "requests>=2.32.0",
    "aiohttp>=3.12.0",
    "tenacity>=8.5.0",
    
    # Data processing
    "numpy>=2.1.0",
    "pandas>=2.3.0",
    "datasets>=4.0.0",
    
    # Progress and logging
    "tqdm>=4.67.0",
    "colorlog>=6.7.0",
    
    # System monitoring
    "psutil>=7.0.0",
    
    # File formats
    "pyyaml>=6.0.2",
    "openpyxl>=3.1.0",
    
    # Optional: for better performance
    "sentencepiece>=0.2.0",
    "protobuf>=3.20.0",
    
    # Environment variables
    "python-dotenv>=1.1.0",
    
    # Data validation
    "pydantic>=2.11.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
]
# CUDA-enabled systems (Linux/Windows with NVIDIA GPU)
cuda = [
    # Flash Attention 2 for memory optimization (requires CUDA)
    "flash-attn>=2.4.0",
    # Quantization support (requires CUDA)
    "bitsandbytes>=0.41.0",
]
# macOS systems (no CUDA support)
macos = [
    # Alternative quantization for CPU/MPS
    "torch>=2.0.0",
]
colab = [
    # Lighter dependencies for Colab environment
    "torch>=2.0.0",
    "transformers>=4.36.0",
    "openai>=1.0.0",
    "requests>=2.31.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "tqdm>=4.65.0",
    "pyyaml>=6.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
]

[project.scripts]
mtbench = "src.cli:main"

[project.urls]
Homepage = "https://github.com/allenlu/claude_mt_bench"
Repository = "https://github.com/allenlu/claude_mt_bench"
Issues = "https://github.com/allenlu/claude_mt_bench/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv.extra-build-dependencies]
flash-attn = ["torch"]